# Zone News Production Nginx Configuration
# Complete setup for all services and miniapp

# Upstream definitions for load balancing
upstream api_gateway {
    server 127.0.0.1:3001;
    keepalive 32;
}

upstream auth_service {
    server 127.0.0.1:3015;
    keepalive 16;
}

upstream user_service {
    server 127.0.0.1:3016;
    keepalive 16;
}

upstream news_service {
    server 127.0.0.1:3011;
    keepalive 16;
}

upstream channels_service {
    server 127.0.0.1:3013;
    keepalive 16;
}

upstream groups_service {
    server 127.0.0.1:3012;
    keepalive 16;
}

upstream workflow_service {
    server 127.0.0.1:3017;
    keepalive 16;
}

upstream analytics_service {
    server 127.0.0.1:3018;
    keepalive 16;
}

upstream subscription_service {
    server 127.0.0.1:3019;
    keepalive 16;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/s;
limit_req_zone $binary_remote_addr zone=webhook_limit:10m rate=50r/s;

# Main website (if using domain)
server {
    listen 80;
    server_name thezonenews.com www.thezonenews.com;
    
    # Redirect to HTTPS if certificates are set up
    # return 301 https://$server_name$request_uri;
    
    root /var/www/html;
    index index.html;
    
    location / {
        try_files $uri $uri/ /index.html;
    }
}

# Telegram Mini App
server {
    listen 8080;
    server_name _;
    
    root /var/www/miniapp;
    index index.html;
    
    # Security headers for Telegram
    add_header X-Frame-Options "ALLOWALL" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, DELETE, PUT" always;
    add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept, Authorization, X-Telegram-Init-Data" always;
    
    # Handle OPTIONS requests
    if ($request_method = 'OPTIONS') {
        return 204;
    }
    
    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/json application/xml+rss application/rss+xml application/atom+xml image/svg+xml text/javascript application/x-javascript application/x-font-ttf application/vnd.ms-fontobject font/opentype;
    
    # Static files with caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 30d;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # Main app
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # API Gateway proxy
    location /api/ {
        limit_req zone=api_limit burst=20 nodelay;
        
        proxy_pass http://api_gateway/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Auth service
    location /auth/ {
        limit_req zone=auth_limit burst=10 nodelay;
        
        proxy_pass http://auth_service/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Telegram-Init-Data $http_x_telegram_init_data;
    }
    
    # User service
    location /user/ {
        limit_req zone=api_limit burst=20 nodelay;
        
        proxy_pass http://user_service/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    
    # News service
    location /news/ {
        proxy_pass http://news_service/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # Cache news content
        proxy_cache_valid 200 5m;
        proxy_cache_valid 404 1m;
    }
    
    # Subscription service
    location /subscription/ {
        proxy_pass http://subscription_service/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    
    # Analytics service
    location /analytics/ {
        proxy_pass http://analytics_service/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

# API-only access (port 3000)
server {
    listen 3000;
    server_name _;
    
    # CORS headers
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, DELETE, PUT" always;
    add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept, Authorization" always;
    
    # API Gateway
    location /api/ {
        limit_req zone=api_limit burst=30 nodelay;
        
        proxy_pass http://api_gateway/api/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    
    # Telegram webhook endpoint
    location /webhook {
        limit_req zone=webhook_limit burst=100 nodelay;
        
        # Verify Telegram IPs (optional but recommended)
        # allow 149.154.160.0/20;
        # allow 91.108.4.0/22;
        # deny all;
        
        proxy_pass http://api_gateway/webhook;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Telegram-Bot-Api-Secret-Token $http_x_telegram_bot_api_secret_token;
        
        # Quick timeout for webhooks
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }
    
    # Health checks
    location /health {
        access_log off;
        proxy_pass http://api_gateway/health;
    }
}

# Admin panel (if needed)
server {
    listen 8081;
    server_name _;
    
    # Basic auth for admin
    # auth_basic "Admin Area";
    # auth_basic_user_file /etc/nginx/.htpasswd;
    
    root /var/www/admin;
    index index.html;
    
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # Proxy to admin APIs
    location /api/ {
        proxy_pass http://api_gateway/api/admin/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

# WebSocket support for real-time features
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# Cache configuration
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=api_cache:10m max_size=100m inactive=60m use_temp_path=off;

# Logging
access_log /var/log/nginx/access.log combined buffer=32k flush=5s;
error_log /var/log/nginx/error.log warn;

# Performance tuning
client_max_body_size 10M;
client_body_buffer_size 128k;
proxy_buffer_size 4k;
proxy_buffers 8 4k;
proxy_busy_buffers_size 8k;
keepalive_timeout 65;
keepalive_requests 100;

# Security
server_tokens off;
add_header X-Content-Type-Options "nosniff" always;
add_header X-XSS-Protection "1; mode=block" always;