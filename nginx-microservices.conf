# Nginx configuration for Zone News Microservices

# Upstream definitions for each microservice
upstream auth_service {
    server 127.0.0.1:4001;
    server 127.0.0.1:4001;  # PM2 cluster mode
}

upstream user_service {
    server 127.0.0.1:4002;
    server 127.0.0.1:4002;  # PM2 cluster mode
}

upstream workflow_service {
    server 127.0.0.1:4003;
}

upstream channels_service {
    server 127.0.0.1:4004;
}

upstream settings_service {
    server 127.0.0.1:4005;
}

upstream analytics_service {
    server 127.0.0.1:4006;
}

upstream subscription_service {
    server 127.0.0.1:4007;
}

upstream api_gateway {
    server 127.0.0.1:3001;
    server 127.0.0.1:3001;  # PM2 cluster mode
}

upstream bot_webhook {
    server 127.0.0.1:3002;
}

# Main server block
server {
    listen 80;
    server_name thezonenews.com www.thezonenews.com;

    # API Gateway - main entry point
    location /api {
        proxy_pass http://api_gateway;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Direct service access (internal use)
    location /services/auth {
        proxy_pass http://auth_service/api;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /services/user {
        proxy_pass http://user_service/api;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /services/workflow {
        proxy_pass http://workflow_service/api;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /services/channels {
        proxy_pass http://channels_service/api;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /services/settings {
        proxy_pass http://settings_service/api;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /services/analytics {
        proxy_pass http://analytics_service/api;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /services/subscription {
        proxy_pass http://subscription_service/api;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Health check endpoints aggregate
    location /health {
        default_type application/json;
        return 200 '{"status":"healthy","services":"running"}';
    }

    # Prometheus metrics
    location /metrics {
        proxy_pass http://analytics_service/metrics;
        allow 127.0.0.1;
        deny all;
    }

    # Static files
    location / {
        root /var/www/html;
        try_files $uri $uri/ /index.html;
    }
}

# Bot subdomain
server {
    listen 80;
    server_name bot.thezonenews.com;

    location /webhook {
        proxy_pass http://bot_webhook/webhook;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Telegram-Bot-Api-Secret-Token $http_x_telegram_bot_api_secret_token;
    }

    location /health {
        proxy_pass http://bot_webhook/health;
    }
}