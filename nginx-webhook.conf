# Nginx configuration for webhook.thezonenews.com
# Routes webhook traffic to Zone API Gateway

server {
    listen 80;
    server_name webhook.thezonenews.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name webhook.thezolenews.com;
    
    # SSL Configuration (handled by Cloudflare, but fallback certs)
    ssl_certificate /etc/letsencrypt/live/thezonenews.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/thezonenews.com/privkey.pem;
    
    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Webhook API Routes - Forward to Zone API Gateway
    location /api/webhook {
        proxy_pass http://127.0.0.1:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Telegram-specific headers
        proxy_set_header X-Telegram-Bot-Api-Secret-Token $http_x_telegram_bot_api_secret_token;
        
        # Timeouts optimized for webhooks
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
        
        # Buffer settings
        proxy_buffering off;
        proxy_request_buffering off;
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://127.0.0.1:3001;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Block all other routes for security
    location / {
        return 404 "Webhook endpoint only";
    }
    
    # Security: Block common attack vectors
    location ~ /\. {
        deny all;
    }
    
    location ~ ^/(\.env|composer\.(json|lock)|package(-lock)?\.json) {
        deny all;
    }
}